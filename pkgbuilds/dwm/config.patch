diff --git a/config.def.h.~4~ b/config.def.h
index 3b35fad..9e5e88d 100644
--- a/config.def.h.~4~
+++ b/config.def.h
@@ -1,12 +1,15 @@
 /* See LICENSE file for copyright and license details. */
+#include "gaplessgrid.c"
+#include "movestack.c"
+#include <X11/XF86keysym.h>
 
 /* appearance */
-static const unsigned int borderpx  = 1;        /* border pixel of windows */
+static const unsigned int borderpx  = 2;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
 static const int showbar            = 1;        /* 0 means no bar */
-static const int topbar             = 1;        /* 0 means bottom bar */
-static const char *fonts[]          = { "monospace:size=10" };
-static const char dmenufont[]       = "monospace:size=10";
+static const int topbar             = 0;        /* 0 means bottom bar */
+static const char *fonts[]          = { "Fira Code:size=9" };
+static const char dmenufont[]       = "Fira Code:size=10";
 static const char col_gray1[]       = "#222222";
 static const char col_gray2[]       = "#444444";
 static const char col_gray3[]       = "#bbbbbb";
@@ -32,17 +35,17 @@ static const Rule rules[] = {
 };
 
 /* layout(s) */
-static const float mfact     = 0.55; /* factor of master area size [0.05..0.95] */
+static const float mfact     = 0.50; /* factor of master area size [0.05..0.95] */
 static const int nmaster     = 1;    /* number of clients in master area */
-static const int resizehints = 1;    /* 1 means respect size hints in tiled resizals */
+static const int resizehints = 0;    /* 1 means respect size hints in tiled resizals */
 
 static const Layout layouts[] = {
 	/* symbol     arrange function */
-	{ "[]=",      tile },    /* first entry is default */
-	{ "><>",      NULL },    /* no layout function means floating behavior */
-	{ "[M]",      monocle },
-	{ "|M|",      centeredmaster },
-	{ ">M>",      centeredfloatingmaster },
+    { "CM",      centeredmaster },
+	{ "T",      tile },    /* first entry is default */
+	{ "F",      monocle },
+    { "GG",      gaplessgrid },
+    { "CFM",      centeredfloatingmaster },
 };
 
 /* key definitions */
@@ -58,35 +61,50 @@ static const Layout layouts[] = {
 
 /* commands */
 static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
-static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
+static const char *dmenucmd[] = { "dmenu_run", "-b", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
 static const char *termcmd[]  = { "st", NULL };
+static const char *qutebrowsercmd[] = { "/usr/bin/qutebrowser", NULL };
+static const char *ankicmd[]  = { "/home/b/bin/anki", NULL };
+static const char *flameshotcmd[] = { "/usr/bin/flameshot", "gui", NULL };
+static const char *togglekeyboardcmd[] = { "/home/b/bin/toggle-internal-keyboard.sh", NULL };
+static const char *vifmcmd[] = { "/usr/local/bin/st", "-e", "/usr/bin/vifmrun", NULL };
+static const char *keepasscmd[] = { "/usr/bin/keepassxc", NULL };
+static const char *volup[] = { "/usr/bin/pactl", "set-sink-volume", "0", "+5%", NULL };
+static const char *voldown[] = { "/usr/bin/pactl", "set-sink-volume", "0", "-5%", NULL };
+static const char *volmute[] = { "/usr/bin/pactl", "set-sink-mute", "0", "toggle", NULL };
+static const char *brightnessup[] = { "/usr/bin/sudo", "/usr/bin/light", "-A", "10", NULL };
+static const char *brightnessdown[] = { "/usr/bin/sudo", "/usr/bin/light", "-U", "10", NULL };
 
-#include "movestack.c"
 static Key keys[] = {
 	/* modifier                     key        function        argument */
-	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
-	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
+	{ 0,                            XK_Super_L,spawn,          {.v = dmenucmd } },
+	{ MODKEY,                       XK_Return, spawn,          {.v = termcmd } },
+	{ 0,                            XF86XK_AudioRaiseVolume,spawn,{.v = volup } },
+	{ 0,                            XF86XK_AudioLowerVolume,spawn,{.v = voldown } },
+	{ 0,                            XF86XK_AudioMute,spawn,    {.v = volmute } },
+	{ 0,                            XF86XK_MonBrightnessUp,spawn,{.v = brightnessup } },
+	{ 0,                            XF86XK_MonBrightnessDown,spawn,{.v = brightnessdown } },
 	{ MODKEY,                       XK_b,      togglebar,      {0} },
-	{ MODKEY|ShiftMask,             XK_j,      rotatestack,    {.i = +1 } },
-	{ MODKEY|ShiftMask,             XK_k,      rotatestack,    {.i = -1 } },
-	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
-	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
-	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
+	{ MODKEY|ShiftMask,             XK_l,      rotatestack,    {.i = +1 } },
+	{ MODKEY|ShiftMask,             XK_u,      rotatestack,    {.i = -1 } },
+	{ MODKEY,                       XK_n,      focusstack,     {.i = +1 } },
+	{ MODKEY,                       XK_e,      focusstack,     {.i = -1 } },
+	{ MODKEY,                       XK_u,      incnmaster,     {.i = +1 } },
 	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
 	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
-	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
-	{ MODKEY|ShiftMask,             XK_j,      movestack,      {.i = +1 } },
-	{ MODKEY|ShiftMask,             XK_k,      movestack,      {.i = -1 } },
-	{ MODKEY,                       XK_Return, zoom,           {0} },
-	{ MODKEY,                       XK_Tab,    view,           {0} },
-	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
-	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
-	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
-	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
-	{ MODKEY,                       XK_u,      setlayout,      {.v = &layouts[3]} },
-	{ MODKEY,                       XK_o,      setlayout,      {.v = &layouts[4]} },
+	{ MODKEY,                       XK_i,      setmfact,       {.f = +0.05} },
+	{ MODKEY|ShiftMask,             XK_n,      movestack,      {.i = +1 } },
+	{ MODKEY|ShiftMask,             XK_e,      movestack,      {.i = -1 } },
+	{ MODKEY,                       XK_Tab,    zoom,           {0} },
+	{ MODKEY|ShiftMask,             XK_Tab,    view,           {0} },
+	{ MODKEY|ShiftMask,             XK_q,      killclient,     {0} },
+	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[0]} },
+	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[1]} },
+	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[2]} },
+	{ MODKEY,                       XK_r,      setlayout,      {.v = &layouts[3]} },
+	{ MODKEY,                       XK_c,      setlayout,      {.v = &layouts[4]} },
 	{ MODKEY,                       XK_space,  setlayout,      {0} },
-	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
+	{ MODKEY|ShiftMask,             XK_BackSpace,togglefloating,{0} },
 	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
 	{ MODKEY|ShiftMask,             XK_0,      tag,            {.ui = ~0 } },
 	{ MODKEY,                       XK_comma,  focusmon,       {.i = -1 } },
@@ -102,7 +120,15 @@ static Key keys[] = {
 	TAGKEYS(                        XK_7,                      6)
 	TAGKEYS(                        XK_8,                      7)
 	TAGKEYS(                        XK_9,                      8)
-	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
+	{ MODKEY|ShiftMask,             XK_Pause,      quit,           {0} },
+
+	{ 0,                            0x1008ff45,spawn,          {.v = qutebrowsercmd } },
+	{ 0,                            0x1008ff46,spawn,          {.v = ankicmd } },
+	{ 0,                            0x1008ff47,spawn,          {.v = keepasscmd } },
+	{ 0,                            XK_Print,  spawn,          {.v = flameshotcmd } },
+	{ ControlMask,                  XK_Print,  spawn,          {.v = togglekeyboardcmd } },
+    { MODKEY|ShiftMask,             XK_Return, spawn,          {.v = vifmcmd } },
+	{ MODKEY,                       XK_BackSpace,focusmaster,   {.i = -1 } },
 };
 
 /* button definitions */
